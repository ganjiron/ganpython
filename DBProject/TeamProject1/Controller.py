from DBProject.TeamProject1 import DbHelper

class Controller():
    def __init__(self):
        pass

# 1. 모든 공연장 공연장 정보 출력
# - 모든 공연장의 공연장의 정보를 정보를 출력한다
# - 공연장 ID,  이름 , 위치 , 정원 , 열리는 공연의 수 순으로 순으로 출력
    def hallInfo(self):
        pass

# 2. 모든 공연 정보 출력
# - 모든 공연의 공연의 정보를 출력한다 출력한다 출력한다 .
# - 공연 ID, 이름 , 종류 , 가격 , 예매자 수 순으로 순으로 출력
    def showInfo(self):
        pass


# 3. 모든 관객 정보 출력
# - 모든 관객의 관객의 정보를 출력한다 출력한다 출력한다 .
# - 관객 ID, 이름 , 성별 , 나이 순으로 출력
    def audienceInfo(self):
        pass

# 4. 공연장 추가
# - 새로운 공연장을 공연장을 추가한다 추가한다 .
# - 이름 (String), 위치 (String), 정원 (int)을 입력 받음
    def addHall(self , h_name , h_location , h_cap ):
        pass

# 5. 공연장 삭제
# - 공연장을 삭제한다 .
# - 공연장 ID (int)를 입력 받음
    def delHall(self , h_id):
        # - 공연장을 삭제하면 삭제하면 그 공연장 의 공연 배정 정보와 해당 공연에 관련된 예매 정보도 모두 삭제되어야 함
        # - 해당 공연장이 없다면 없다면 에러 메시지 출력
        pass

# 6. 공연 추가
# - 새로운 공연을 추가한다 추가한다 .
# - 이름 (String), 종류 (String), 가격 (int)를 입력 받음
    def addShow(self , s_name , s_type , s_price):
        pass


# 7. 공연 삭제
# - 공연을 삭제한다 삭제한다 .
# - 공연 ID(int)를 입력 받음
    def delShow(self , s_id):
        # - 해당 공연이 없다면 에러 메시지 출력
        # - 공연을 삭제하면 관련된 예매 정보도 모두 삭제되어야 함
        pass


# 8. 관객 추가
# - 새로운 관객을 추가한다 추가한다 .
# - 이름 (String), 성별 (String),나이 (int)를 입력 받음
    def addAudience(self , a_name , a_gender , a_age):
        pass


# 9. 관객 삭제
# - 관객을 삭제한다 .
# - 관객 ID(int)를 입력 받음
    def delAudience(self , a_id):
        # - 해당 관객이 없다면 에러 메시지 출력

        # - 관객을 삭제하면 관련된 예매 정보도 모두 삭제되어야 함
        pass


# 10. 공연 배정
# - 공연장에 공연을 배정한다 .
# - 공연장 ID(int) 및 공연 ID(int)를 입력 받음
    def assignShow(self , h_id , s_id):
        # - 공연이 이미 다른 공연장에 배정되었 다면 에러 메시지 출력

        # - 하나의 공연장에 대해서 여러 개의 공연을 배정할 수 있음
        pass


# 11. 공연 예매
# - 관객을 공연에 예매 시킨다 .
# - 공연 ID(int), 관객 ID(int), 좌석 번호 리스트 (int list)를 입력 받음
    def reserveShow(self , s_id , a_id , seatNo):
        # - 한 관객은 여러 개의 공연을 예매할 수 있음
        # - 한 관객은 한 공연의 여러 좌석을 예매할 수 있음

        # - 공연이 공연장에 배정되지 않았다면 에러 메시지 출력

        # - 공연의 좌석 번호는 정수 (int)이며 , 1에서부터 해당 공연이 배정된 공연장의 정원 값 까지를 가질 수 있음
        # (예: 공연이 배정된 공연장의 정원이 정원이 100 이라면 , 좌석 번호는 1부터 100 까지의 정수 값을 가질 수 있음 )
        # - 좌석 번호 리스트의 좌석 번호 값들 중 하나라도 범위를 범위를 벗어난다면 에러 메시 지 출력
        # - 좌석 번호 리스트에서 각 좌석 번호는 번호는 콤마 (,) 로 구분됨 (예: 1, 3, 5) -> , 로 구분했을때 숫자가 아니면 예외처리

        # - 좌석 번호 리스트의 좌석 번호 중 하나라도 이미 매되어 있다면 예매에 실패 함

        # - 예매에 성공했다면 총 티켓 가격 출력
        # - 총 티켓 가격 은 티켓 수 X 티켓 하나당 하나당 가격 으로 계산됨
        # - 티켓 하나당 가격 은 나이에 따라 달라짐
        # - 1~7 세: 무료
        # - 8~12 세: 50% 할인
        # - 13 세~18 세: 20% 할인
        # - 19 세 이상 : 할인 없음
        # - 계산된 총 티켓 가격 은 소수점 첫째자리에서 반올림
        pass


# 12. 공연장에 배정된 공연 목록 출력
# - 공연장에 배정된 모든 공연의 정보를 출력한다 .
# - 공연장 ID (int)를 입력 받음
    def showInHallInfo(self , h_id):
        # - 해당 공연장이 없다면 에러 메시지 출력

        # - 해당 공연장에  배정된  공연의 정보를 출력한다
        # - 공연 ID,이름 , 종류 , 가격 , 예매 좌석 수 순으로 출력
        pass


# 13. 공연을 예매한 관객 정보 출력
# - 공연을 예매한 모든 관객의 정보를 출력한다 .
# - 공연 ID(int)를 입력 받음
    def reservedAudienceShowInfo(self , s_id):
        # - 해당 공연이 없다면 에러 메시지 출력

        # - 해당 공연을 예매한 관객의 정보를 중복 없이 출력한다 .
        # - 관객 ID, 이름 , 성별 , 나이 순으로 출력
        pass



# 14. 공연의 좌석 별 예매 상황 출력
# - 공연의 각 좌석 별로 예매한 관객의 정보를 출력한다 .
# - 공연 ID(int)를 입력 받음
    def statusShowReserveInfo(self,s_id):
        # - 공연이 공연장에 배정되지 않았다면 에러 메시지 출력
        # - 해당 공연이 없다면 에러 메시지 출력

        # - 해당 공연의 좌석 번호와 그 좌석을 예매한 관객의 ID 를 출력한다 .
        # - 예매되지 않은 좌석 번호도 결과에 나와야 함
        pass



# 15. 프로그램 종료
    def fuckOffApp(self):
        pass


# 16. 데이터베이스 리셋 및 생성
# - 기존 모든 테이블 및 데이터가 존재할 경우 삭제
# - 2장에서 정의한 데이터 타입에 해당하는 새로운 테이블 생성
# - 삭제 실시 전 확인 메시지를 띄우고 y/n 사용자 입력 을 받아야 함
    def resetAll(self):
        pass

if __name__ == '__main__':
    pass